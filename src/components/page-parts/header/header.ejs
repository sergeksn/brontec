<!DOCTYPE html>
<html lang="ru">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>BRONTEC</title>
  <link rel="shortcut icon" href="~@/favicon.ico" />
  <link rel="preload" href="~@fonts/manrope-regular.woff2" as="font" type="font/woff2" crossorigin>
  <link rel="preload" href="~@fonts/manrope-bold.woff2" as="font" type="font/woff2" crossorigin>
  <link rel="preload" href="~@fonts/icon-font.woff" as="font" type="font/woff" crossorigin>
  <!--не забыть поменть на woff2-->
  <!--для того чтоб не было cls из-за дёргания букв при поддгрузке шрифта-->
  <link href="http://localhost:3579/assets/css/critical.css" rel="stylesheet">
  <script src="http://localhost:3579/critical.js"></script>
</head>

<body class="custom-scrollbar">
  <script>
    /*скрипт определяет и записывает ширину стандартного скролбара и ширину кастомного скролбара, а так же создаёт css переменную для взаимодествия с таблицами стилей*/
    (() => {
      let tb = d.createElement('div'),
        itb = document.createElement('div');

      tb.style.visibility = 'hidden';
      tb.style.overflow = 'scroll';
      qs('body').appendChild(tb);

      tb.appendChild(itb);

      GDS.scroll.standart_scrollbar_width = tb.offsetWidth - itb.offsetWidth;

      tb.classList.add('custom-scrollbar');

      let csbw = tb.offsetWidth - itb.offsetWidth;

      GDS.scroll.custom_scrollbar_width = csbw;

      /*qs('#common-style').innerHTML += `:root{--custom-scrollbar-width: ${csbw}px;}`;*/
      /*пока не исполюзуется эта переменная в css*/

      tb.parentNode.removeChild(tb);
    })();
  </script>
  <header class="custom-scrollbar">
    <%- include('./header-poster')%>
    <%- include('./header-visible')%>
    <%- include('./header-hidden')%>
  </header>
  <%- include('./header-cart')%>
  <div id="header-background"></div>
  <div id="header-overlay" class="overlay"></div>
  <script>
    /*нужно чтоб в момент загрузки страницы меню занимало нужную позицию и не прыгало относитель но контента*/
    /*загоняем в самовызывающуюся функцию для того чтоб инкапсулировать переменные*/
    (() => {
      let header = document.getElementsByTagName("header")[0],
        /*элемент header*/
        header_background = document.getElementById("header-background"),
        /*элемент #header-background*/
        header_height = window.getComputedStyle(header).height; /*высота хедера числом*/
      header_background.style.height = header_height; /*задаём высоту подложки хедера*/
    })()
  </script>
  <main>