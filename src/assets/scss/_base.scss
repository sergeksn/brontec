/*
*
ОСНОВНЫЕ СТИЛИ
*
*/

@font-face {
    font-family: Manrope;
    src: url(@fonts/manrope.ttf);
}

* {
    box-sizing: border-box;
}

a {
    text-decoration: none;
    color: inherit;
}

a[title="Вы тут!"] {
    color: var(--gray);
    cursor: default;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    margin-top: 0;
    margin-bottom: 0;
}

body,
html {
    position: relative;
    width: 100%;
    height: 100%;
}

body {
    background-color: var(--white);
    margin: 0;
    font: var(--default);
    min-width: 20rem;
    /*320px*/
}

.flex {
    display: flex;
    flex-wrap: wrap;
}

.disabled {
    opacity: 0.3;
}

/*ширина основных блоков не стандартная так что задаём её отлельно от сетки*/
.standart_container {
    max-width: 73.75rem;
    /*1180px*/
    margin-left: auto;
    margin-right: auto;
    padding-left: var(--10px);
    padding-right: var(--10px);
}

@media (min-width: 40em) {
    .standart_container {
        padding-left: var(--15px);
        padding-right: var(--15px);
    }
}

@media (min-width: 1920px) {
    .standart_container {
        max-width: 61.458vw;
    }
}

/*ширина основных блоков не стандартная так что задаём её отлельно от сетки*/

/*
  *
  ОСНОВНЫЕ СТИЛИ И ПЕРЕМЕННЫЕ
  *
  */

@function str-replace($string, $search, $replace: "") {
    $index: str-index($string, $search);
    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }
    @return $string;
}

@function rem($px_size, $add_unit: true) {
    $unit: "";

    @if $add_unit {
        $unit: $unit + rem;
    }

    @return math.div($px_size, 16px) + #{$unit};
}

//данная функция будет плавно увиличивать свой результат по мере увеличения текущей ширины экрана от $min_value до $max_value
//$min_value - начально значение, т.е. которе будет увеличиваться по мере увеличиения ширины экрана
//$min_win_width - ширина экрана на которой начинается отсчёт с $min_value и увидичивается, т.е. ширина экрана на котрой выходное значение будет равно $min_value
//$max_value - максимальное значение, т.е. значение выше которого нельзя подниматься, если оно будет не задано то будет использованно значение пропорциональне $min_value для текущей ширины экрана
//$wax_win_width - итоговая ширина на котрой заканчивается увеличение $min_value и оно становиться равным $max_value
@function adaptiv_size($min_value, $min_win_width, $max_value: false, $wax_win_width: false) {
    @if $wax_win_width == false {
        $wax_win_width: 99999px;
    }

    @if $max_value == false {
        $max_value: calc($wax_win_width * $min_value/ $min_win_width);
    }

    @return calc(rem($min_value) + rem(($max_value - $min_value), false) * ((var(--win-width-rem) - rem($min_win_width)) / (rem($wax_win_width, false) - rem($min_win_width, false))));
}

.test_text_size {
    margin: 25px auto;
    background-color: #fff;
    text-align: center;
    font-size: adaptiv_size(25px, 640px, 50px, 1920px);
    line-height: normal;

    @media (min-width: 1921px) {
        font-size: adaptiv_size(50px, 1921px);
    }
}
