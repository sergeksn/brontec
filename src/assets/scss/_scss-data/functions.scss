@use "sass:math";

//функция заменяет в строке $string искомую строку $search на $replace
@function str-replace($string, $search, $replace: "") {
    $string: $string + ""; //превращаем в строку
    $index: str-index($string, $search);
    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }
    @return $string;
}

//функция превращает значение 16px в число 16
@function stripUnit($value) {
    @return math.div($value, $value * 0 + 1);
}

//функция переводит пиксельные значения в rem
//$add_unit - сообщает нужно ли указывать единицы измерения rem в результате или просто значение
//rem по умочанию в браузере 16px
@function rem($pxValue, $add_unit: true) {
    @if ($add_unit) {
        @return math.div(stripUnit($pxValue), 16) + rem;
    }

    @return math.div(stripUnit($pxValue), 16);
}

//функция переводит пиксельные значения в em
//$add_unit - сообщает нужно ли указывать единицы измерения rem в результате или просто значение
//em по умочанию в браузере 16px
@function em($pxValue, $add_unit: true) {
    @if ($add_unit) {
        @return math.div(stripUnit($pxValue), 16) + em;
    }

    @return math.div(stripUnit($pxValue), 16);
}

//данная функция будет плавно увиличивать свой результат по мере увеличения текущей ширины экрана от $min_value до $max_value
//ВАЖНО: результат будет в rem
//$min_value - начально значение, т.е. которе будет увеличиваться по мере увеличиения ширины экрана
//$min_win_width - ширина экрана на которой начинается отсчёт с $min_value и увидичивается, т.е. ширина экрана на котрой выходное значение будет равно $min_value
//$max_value - максимальное значение, т.е. значение выше которого нельзя подниматься, если оно будет не задано то будет использованно значение пропорциональне $min_value для текущей ширины экрана
//$wax_win_width - итоговая ширина на котрой заканчивается увеличение $min_value и оно становиться равным $max_value
//--wwr - это ширина окна браузера в данный момент в rem
@function adaptiv_size($min_value, $min_win_width, $max_value: false, $wax_win_width: false) {
    @if $wax_win_width == false {
        $wax_win_width: 99999;
    }

    @if $max_value == false {
        $max_value: math.div($wax-win-width * $min-value, $min-win-width);
    }

    $residual: (rem($wax_win_width, false) - rem($min_win_width, false));

    @return calc(rem($min_value) + rem(($max_value - $min_value), false) * ((var(--wwr) - rem($min_win_width)) / $residual));
}
