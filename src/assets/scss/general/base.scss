//@media (any-hover: none) and (any-pointer: coarse) - смартфон без возможности ховера, и с указателем ограниценной точности
@font-face {
    font-family: 'Manrope-Regular';
    font-display: swap;
    src: url(@fonts/manrope-regular.woff2) format('woff2'), url(@fonts/manrope-regular.woff) format('woff');
}

@font-face {
    font-family: 'Manrope-Bold';
    font-display: swap;
    src: url(@fonts/manrope-bold.woff2) format('woff2'), url(@fonts/manrope-bold.woff) format('woff');
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

a[title='Вы тут!'] {
    color: var(--gray);
    cursor: default;
}

h1 {
    font: var(--h1);
}

h2 {
    font: var(--h2);
}

body {
    background-color: var(--white);
    font: var(--default);
    overflow-x: hidden;
}

.disabled {
    opacity: 0.3;
}
.red {
    color: red;
}

button {
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    transition: opacity var(--standart-anim);
    //background-color: red;

    @media (any-hover: none) and (any-pointer: coarse) {
        min-width: var(--min-interactive-elements-width);
        min-height: var(--min-interactive-elements-height);
    }
}

input {
    width: 100%;
    border: none;
    outline: none; //иногда пользовательские таблицы стилей делают обводку нам это нужно запретить

    //если у пользователя нет ни какого указательно устройства, мы не должны убирать обводку чтоб когда пользователь сфокусируется на инпуте , через таб например, он выделился
    @media not (any-pointer: none) {
        outline: none;
    }
}

.ruble-price {
    &::after {
        //если вдруг не понравится внешний вид рубля попросить шрифт и сюда вставить символ ₽ с указанием font-famaly
        content: '\a0\20BD';
    }
}

.discont-price {
    &::before {
        content: '-';
    }
    &::after {
        content: '%';
    }
}

.old-price {
    text-decoration: line-through;
}

//ПРИМЕЧАНИЕ: если будут притензии из-за слишком больших отступов между элементами то можно для отдельных элементов менять минимальные высоты
.set-min-interactive-size {
    display: flex;
    align-items: center;

    @media (any-hover: none) and (any-pointer: coarse) {
        min-width: var(--min-interactive-elements-width);
        min-height: var(--min-interactive-elements-height);
    }
}

//делает минимальные высоты меньше на 10 пикселей меньше, для того чтоб вставить 10 пикселей отступа, актуально для рядов, т.к. чтоб на пк были отсупы при автоматической высоте
.set-min-interactive-size-bez-gap {
    display: flex;
    align-items: center;

    @media (any-hover: none) and (any-pointer: coarse) {
        min-width: var(--min-interactive-elements-width);
        min-height: calc(var(--min-interactive-elements-height) - rem(10));
    }

    @media (any-hover: none) and (any-pointer: coarse) and (min-width: rem(1920)) {
        min-height: calc(var(--min-interactive-elements-height) - adaptiv_rem_size(10, 1920)) !important; //!important нужно чтоб переопределить стил выше после групировки медиазапросов
    }
}

.button-main {
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--border-radius);
    font: var(--default);
    cursor: pointer;
    color: var(--white);
    width: 100%;
    min-height: var(--button-min-height);
    min-width: var(--button-min-width);
    max-width: var(--button-max-width);
    background-color: var(--blue);
    padding: var(--gap-10) var(--gap);

    &--not-minmax-width {
        min-width: auto;
        max-width: none;
    }

    @media (any-hover: hover) {
        &:hover {
            background-color: var(--blue-hover);
        }
    }

    &--black {
        background-color: var(--black);

        @media (any-hover: hover) {
            &:hover {
                background-color: var(--black-hover);
            }
        }
    }

    &--white {
        background-color: var(--light);
        color: var(--black);

        @media (any-hover: hover) {
            &:hover {
                background-color: var(--white-hover);
            }
        }
    }
}

//ширина основных блоков не стандартная так что задаём её отлельно от сетки
.standart-container {
    max-width: var(--standart-container-max-width);
    margin: 0 var(--standart-container-margin-lr);
    width: var(--standart-container-width);
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-column-gap: var(--gap);
    position: relative;
}
//ширина основных блоков не стандартная так что задаём её отлельно от сетки

//нужно для того чтоб слайдер был скрыт и недоступен для действий пока не загрузится
.wait-init-slider-swiper {
    pointer-events: none;
    visibility: hidden;
}
//нужно для того чтоб слайдер был скрыт и недоступен для действий пока не загрузится
