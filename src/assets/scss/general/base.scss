//@media (any-hover: none) and (any-pointer: coarse) - смартфон без возможности ховера, и с указателем ограниценной точности
@font-face {
    font-family: 'Manrope-Regular';
    font-display: swap;
    src: url(@fonts/manrope-regular.woff2) format('woff2'), url(@fonts/manrope-regular.woff) format('woff');
}

@font-face {
    font-family: 'Manrope-Bold';
    font-display: swap;
    src: url(@fonts/manrope-bold.woff2) format('woff2'), url(@fonts/manrope-bold.woff) format('woff');
}

// html{
//     scroll-behavior: smooth;
// }

*,
*::before,
*::after {
    box-sizing: border-box;
}

// * {
//     color: var(--black);
// }

//разные типы блоков по цвету
.light-block {
    background-color: var(--light);
}

.dark-block {
    color: var(--white);
    background-color: var(--black);
}

.dark-block * {
    color: var(--white);
}

.blue-block {
    color: var(--white);
    background-color: var(--blue);
}

.blue-block * {
    color: var(--white);
}
//разные типы блоков по цвету

span[title='Вы тут!'] {
    color: var(--gray);
    cursor: not-allowed;
}

//дефолтная сссылка, к которой нужно применить цвета и курсор
.link-default {
    color: var(--link);
    cursor: pointer; //на всякий случай когда применяем не к ссылке

    @media (any-hover: hover) {
        &:hover {
            color: var(--link-hover);
        }
    }

    &:visited {
        color: var(--link-visited);
    }
}
//дефолтная сссылка, к которой нужно применить цвета и курсор

h1 {
    font: var(--h1);
    grid-column: 1/-1;
}

h2 {
    font: var(--h2);
    grid-column: 1/-1;
}

h3 {
    font: var(--h3);
}

body {
    background-color: var(--white);
    font: var(--default);
    overflow-x: hidden;
}

.disabled {
    opacity: 0.3;
}
.red {
    color: red;
}

input {
    width: 100%;
    border: none;
    outline: none; //иногда пользовательские таблицы стилей делают обводку нам это нужно запретить
}

//приёдётся отказатся от вставки кирилицы через css т.к. иногда происходя ошибки с кодировкой и на экране кракозябры
.ruble-price {
    &::after {
        //если вдруг не понравится внешний вид рубля попросить шрифт и сюда вставить символ ₽ с указанием font-famaly
        content: '\a0\20BD';
    }
}

.discont {
    &::before {
        content: '-';
    }
    &::after {
        content: '%';
    }
}

.old-price {
    text-decoration: line-through;
}

//ПРИМЕЧАНИЕ: если будут притензии из-за слишком больших отступов между элементами то можно для отдельных элементов менять минимальные высоты
.set-min-interactive-size {
    display: flex;
    align-items: center;

    @media (any-hover: none) and (any-pointer: coarse) {
        min-width: var(--min-interactive-elements-width);
        min-height: var(--min-interactive-elements-height);
    }
}

//делает минимальные высоты меньше на 10 пикселей меньше, для того чтоб вставить 10 пикселей отступа, актуально для рядов, т.к. чтоб на пк были отсупы при автоматической высоте
.set-min-interactive-size-bez-gap {
    display: flex;
    align-items: center;

    @media (any-hover: none) and (any-pointer: coarse) {
        min-width: var(--min-interactive-elements-width);
        min-height: calc(var(--min-interactive-elements-height) - var(--10));
    }

    @media (any-hover: none) and (any-pointer: coarse) and (min-width: rem(1920)) {
        min-height: calc(var(--min-interactive-elements-height) - adaptiv_rem_size(10, 1920)) !important; //!important нужно чтоб переопределить стил выше после групировки медиазапросов
    }
}

//стандартная кнопка на сайте
.button-main {
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--border-radius);
    font: var(--default);
    cursor: pointer;
    user-select: none;
    color: var(--white);
    width: 100%;
    min-height: var(--button-min-height);
    min-width: var(--button-min-width);
    max-width: var(--button-max-width);
    background-color: var(--blue);
    padding: var(--10) var(--gap);
    transition: opacity var(--standart-anim), background-color var(--standart-anim);

    &--not-minmax-width {
        min-width: auto;
        max-width: none;
    }

    &--not-anim {
        transition: none;
    }

    &:disabled {
        background-color: var(--gray);
    }

    @media (any-hover: hover) {
        &:hover {
            background-color: var(--blue-hover);

            &:disabled {
                background-color: var(--gray);
                cursor: not-allowed;
            }
        }
    }

    &--black {
        background-color: var(--black);
        color: var(--white);

        @media (any-hover: hover) {
            &:hover {
                background-color: var(--black-hover);
            }
        }
    }

    &--white {
        background-color: var(--light);
        color: var(--black);

        @media (any-hover: hover) {
            &:hover {
                background-color: var(--white-hover);
            }
        }

        &:disabled {
            background-color: var(--white-disabled);
        }
    }

    &--transparent {
        background-color: transparent;
        color: var(--black);
        border: var(--border-width) solid var(--blue);

        @media (any-hover: hover) {
            &:hover {
                background-color: var(--light);
            }
        }
    }

    &--white-transparent {
        background-color: transparent;
        color: var(--light);
        border: var(--border-width) solid var(--light);

        @media (any-hover: hover) {
            &:hover {
                color: var(--white-hover);
                border-color: var(--white-hover);
                background-color: transparent;
            }
        }
    }

    &--disabled {
        background-color: var(--gray);
        color: var(--white);
        cursor: not-allowed;

        @media (any-hover: hover) {
            &:hover {
                background-color: var(--gray);
            }
        }
    }
}

button {
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;

    @media (any-hover: none) and (any-pointer: coarse) {
        min-width: var(--min-interactive-elements-width);
        min-height: var(--min-interactive-elements-height);
    }
}

.button-maket-size {
    min-width: var(--button-maket-size);
    min-height: var(--button-maket-size);
}

//ширина основных блоков не стандартная так что задаём её отлельно от сетки
.standart-container {
    max-width: var(--standart-container-max-width);
    margin: 0 var(--standart-container-margin-lr);
    width: var(--standart-container-width);
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-column-gap: var(--gap);
    position: relative;

    &--after-line:after {
        //для блокв которым снизу нужно серая линия, есть на странице оформления заказа
        content: '';
        border-bottom: var(--border-width) solid var(--gray);
        grid-column: 1/-1;
        order: 9;
        margin-top: var(--medium-gap);
    }
}
//ширина основных блоков не стандартная так что задаём её отлельно от сетки

//нужно для того чтоб слайдер был скрыт и недоступен для действий пока не загрузится
.wait-init-slider-swiper {
    pointer-events: none;
    visibility: hidden;
}
//нужно для того чтоб слайдер был скрыт и недоступен для действий пока не загрузится

//кастомный чекбокс используемый в конфигураторе и т.д.
.custom-checbox {
    position: relative;

    input {
        position: absolute;
        opacity: 0;
        pointer-events: none;
        height: 100%;
    }

    label {
        display: flex;
        align-items: center;
        justify-content: center;
        min-width: var(--30);
        min-height: var(--30);
        font-size: var(--12);
        border: var(--border-width-bold) solid var(--gray);
        border-radius: var(--border-radius);
        cursor: pointer;

        @media (any-hover: none) and (any-pointer: coarse) {
            font-size: var(--gap);
            min-width: var(--min-interactive-elements-width);
            min-height: var(--min-interactive-elements-height);
        }

        &:before {
            display: none;
        }
    }

    input:checked ~ label:before {
        display: block;
    }

    input:disabled ~ label {
        cursor: not-allowed;
    }

    //это для чекбоксов в формах после проверки если они не отмечены быдучи обязательными после попытки отправки то будут выделены красным
    &--check-valid {
        input:invalid ~ label {
            border-color: var(--error-color);
        }
    }
    //это для чекбоксов в формах после проверки если они не отмечены быдучи обязательными после попытки отправки то будут выделены красным

    //чекбокс для страниц комплекта и детали с синей заливкой и белой галочкой
    &--blue {
        label {
            font-size: var(--14);
            color: var(--white);
            min-width: var(--40);
            min-height: var(--40);

            @media (any-hover: none) and (any-pointer: coarse) {
                min-width: var(--min-interactive-elements-width);
                min-height: var(--min-interactive-elements-height);
            }
        }

        input:checked ~ label {
            background-color: var(--blue);
            border: none;
        }
    }
    //чекбокс для страниц комплекта и детали с синей заливкой и белой галочкой

    &--cart {
        display: flex; //нужно для того чтоб нормально отображался внутри чекбокса текст отписания чекбокса, если нужно менять стилди описания при смене активности чекбокса
        align-items: center;

        input:checked ~ label {
            border-color: #000;

            @media (any-hover: hover) {
                &:hover {
                    border-color: var(--blue);
                }
            }
        }

        div[class*='title'] {
            color: var(--gray);
        }

        input:checked ~ div[class*='title'] {
            color: #000;
        }
    }
}
//кастомный чекбокс используемый в конфигураторе и т.д.

//оформление label заголовков для полей в форме
.forma-title {
    margin-bottom: var(--10);
    font: var(--small);
    display: inline-block;

    &--required {
        &:before {
            content: '* ';
            color: red;
        }
    }
}
//оформление label заголовков для полей в форме

//кастомные инпуты
input.custom-text-input {
    margin-bottom: var(--20);
    border: var(--border-width) solid var(--gray);
    border-radius: var(--border-radius);
    padding: var(--15) var(--20);
    height: var(--50);
    width: 100%;
    outline: none; //иногда пользовательские таблицы стилей делают обводку нам это нужно запретить

    @media (min-width: rem(640)) {
        margin-bottom: adaptiv_rem_size(20, 640, 30, 1920);
    }

    @media (min-width: rem(1280)) {
        height: var(--60);
    }

    @media (min-width: rem(1920)) {
        margin-bottom: var(--30);
    }

    @media (any-hover: hover) {
        &:hover:not(:disabled):not(:focus):not(&--error) {
            border-color: var(--black);
        }
    }

    &:focus:not(:disabled) {
        border-color: var(--blue);
    }

    &:disabled {
        cursor: not-allowed;
        background-color: var(--light);
    }

    &--error,
    &--check-valid:invalid {
        border-color: var(--error-color) !important; //чтоб перекрыть все другие стили пок аесть ошибка
    }

    &--success {
        border-color: var(--success-color) !important; //чтоб перекрыть все другие стили пок аесть ошибка
    }
}
//кастомные инпуты

//кастомные текстовые поля
.custom-textarea {
    border: var(--border-width) solid var(--gray);
    border-radius: var(--border-radius);
    padding: var(--15) var(--20);
    position: relative;
    display: flex;
    cursor: text;

    @media (any-hover: hover) {
        &:hover {
            border-color: var(--black);
        }
    }

    &--focus {
        border-color: var(--blue) !important; //чтоб перекрыть ховер
    }

    &--not-valid {
        border-color: var(--error-color) !important; //чтоб перекрыть ховер
    }

    &__resizer {
        background-image: var(--resizer-textarea);
        background-size: cover;
        height: var(--15);
        width: var(--15);
        position: absolute;
        bottom: var(--15);
        right: var(--20);
        pointer-events: none;
    }

    textarea {
        border: none;
        width: 100%;
        resize: vertical;
        outline: none; //иногда пользовательские таблицы стилей делают обводку нам это нужно запретить

        &::-webkit-resizer {
            height: var(--15);
            width: var(--15);
        }
    }
}
//кастомные текстовые поля

//для скрытия спойлера
.spoiler-hidden {
    display: none;
}
//для скрытия спойлера

//блоки для того чтоб получать значения переменных в js
.test-div {
    visibility: hidden;
    height: var(--big-gap);
    pointer-events: none;
    padding: var(--gap) var(--10) var(--small-gap) var(--medium-gap);
}
