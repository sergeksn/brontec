//
//
//НЕ ИСПОЛЬЗУЕТСЯ, ПРИМЕНЯЮ ПОДСТРАИЫВЫЕМЫЕ ЗНАЧЕНИЯ В ЗАВИСИМОСТИ ОТ ШИРИНЫ ЭКРАНА
//
//
$breakpoints: 640px, 960px, 1280px; //брейкпоинты
$colums-count: 12; //количество колонок в сетке

//формирует блоки вида .col-640-1 или .col-1
@mixin grid-col($point) {
    @if ($point) {
        $point: "-#{$point}";
    } @else {
        $point: null;
    }

    @for $i from 1 through $colums-count {
        $size: calc((100% / $colums-count) * $i);

        .col#{$point}-#{$i} {
            flex: 0 0 $size;
            max-width: $size;
        }
    }
}

//формирует блоки вида .offset-640-1 или .offset-1
@mixin grid-offset($point) {
    @if ($point) {
        $point: "-#{$point}";
    } @else {
        $point: null;
    }

    @for $i from 1 through $colums-count {
        @if ($i < $colums-count) {
            .offset#{$point}-#{$i} {
                margin-left: calc((100% / $colums-count) * $i);
            }
        }
    }
}

[class*="col-"] {
    position: relative;
    width: 100%;
    padding-left: rem(10);
    padding-right: rem(10);

    @media (min-width: rem(1920)) {
        padding-left: adaptiv_rem_size(10, 1920);
        padding-right: adaptiv_rem_size(10, 1920);
    }
}

//формирует блоки вида .col-1 и .offset-1
@include grid-col(null);
@include grid-offset(null);

//формирует блоки вида .col-640-1 и .offset-640-1
@each $point in $breakpoints {
    @media (min-width: em($point)) {
        $point: #{str-replace($point, "px")};

        @include grid-col($point);
        @include grid-offset($point);
    }
}
